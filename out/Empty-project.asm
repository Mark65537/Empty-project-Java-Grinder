.68000
ram_start equ 0xff0000
  TMSS_REG equ 0xa14000
  HW_VERSION equ 0xa10001
  VDP_DATA equ 0xc00000
  VDP_CTRL equ 0xc00004
  Z80_RAM equ 0xa00000
  Z80_BUSREQ equ 0xa11100
  Z80_RESET equ 0xa11200

  ;-------------------------------:
  ; exception vectors
  ;-------------------------------:

  dc32 0x00000000   ; startup SP
  dc32 start        ; startup PC
  dc32 interrupt    ; bus
  dc32 interrupt    ; addr
  dc32 interrupt    ; illegal
  dc32 interrupt    ; divzero
  dc32 interrupt    ; CHK
  dc32 interrupt    ; TRAPV
  dc32 interrupt    ; priv
  dc32 interrupt    ; trace
  dc32 interrupt    ; line 1010 emulator
  dc32 interrupt    ; line 1111 emulator
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt
  dc32 interrupt    ; spurious interrupt
  dc32 interrupt    ; interrupt level 1 (lowest priority)
  dc32 extint       ; interrupt level 2 = external interrupt
  dc32 interrupt    ; interrupt level 3
  dc32 hsync        ; interrupt level 4 = H-sync interrupt
  dc32 interrupt    ; interrupt level 5
  dc32 vsync        ; interrupt level 6 = V-sync interrupt
  dc32 interrupt    ; interrupt level 7 (highest priority)
  dc32 interrupt    ; TRAP #00 exception
  dc32 interrupt    ; TRAP #01 exception
  dc32 interrupt    ; TRAP #02 exception
  dc32 interrupt    ; TRAP #03 exception
  dc32 interrupt    ; TRAP #04 exception
  dc32 interrupt    ; TRAP #05 exception
  dc32 interrupt    ; TRAP #06 exception
  dc32 interrupt    ; TRAP #07 exception
  dc32 interrupt    ; TRAP #08 exception
  dc32 interrupt    ; TRAP #09 exception
  dc32 interrupt    ; TRAP #10 exception
  dc32 interrupt    ; TRAP #11 exception
  dc32 interrupt    ; TRAP #12 exception
  dc32 interrupt    ; TRAP #13 exception
  dc32 interrupt    ; TRAP #14 exception
  dc32 interrupt    ; TRAP #15 exception
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)
  dc32 interrupt    ; Unused (reserved)

  ;-------------------------------:
  ; cartridge info header
  ;-------------------------------:

  db "SEGA GENESIS    "  ; must start with "SEGA"
  db "(C)---- "          ; copyright
  db "2015.MAY"          ; date
  db "JAVA GRINDER                                    " ; cart name
  db "JAVA GRINDER                                    " ; cart name (alt. language)
  db "GM MK-0000 -00"    ; program type / catalog number
  dc16 0x0000                ; ROM checksum
  db "J               "  ; hardware used
  dc32 0x00000000            ; start of ROM
  dc32 0x003fffff            ; end of ROM
  dc32 0x00ff0000,0x00ffffff ; RAM start/end
  db "            "      ; backup RAM info
  db "            "      ; modem info
  db "                                        " ; comment
  db "JUE             "  ; regions allowed

  ;-------------------------------:
  ; exception handlers
  ;-------------------------------:

extint:
hsync:
vsync:
interrupt:
  rte

CENTER_X equ ram_start+0
CENTER_Y equ ram_start+4
res_images_ImgJavaGrinder_image equ ram_start+8
res_images_ImgJavaGrinder_palette equ ram_start+12
res_images_ImgJavaGrinder_pattern equ ram_start+16
res_sprites_SprArrow_clearPattern equ ram_start+20
res_sprites_SprArrow_palette equ ram_start+24
res_sprites_SprArrow_pattern equ ram_start+28
start:
  movea.l #0x0, SP

  ; Setup registers used to talk to VDP
  movea.l #VDP_DATA, a0
  movea.l #VDP_CTRL, a1

  ; During initialization:
  ; d0 = 0
  ; d1 = data movement
  ; d2 = counter
  eor.l d0, d0

  ; Initialize TMSS
  movea.l #HW_VERSION, a2
  movea.l #TMSS_REG, a3
  move.b (a2), d1           ; A10001 test the hardware version
  andi.b #0x0f, d1
  beq.b start_init_tmss     ; branch if no TMSS
  move.l #0x53454741, (a3)  ; A14000 disable TMSS
start_init_tmss:
  move.w (a1), d1    ; C00004 read VDP status (interrupt acknowledge?)

  ; Initialize video
  movea.l #vdp_reg_init_table, a2
  move.w #0x8000, d1
  moveq #24-1, d2   ; length of video initialization block
start_video_init:
  move.b (a2)+, d1  ; get next video control byte
  move.w d1, (a1)   ; C00004 send write register command to VDP
  add.w #0x100, d1  ; point to next VDP register
  dbra d2, start_video_init  ; loop for rest of block

  ; DMA is now set up for 65535-byte fill of VRAM
  move.l #0x40000080, (a1)  ; C00004 = VRAM write to 0x0000
  move.w d0, (a0)      ; C00000 = write zero to VRAM (starts DMA fill)
  ; Wait on busy VDP
start_wait_dma:
  move.w (a1), d1      ; C00004 read VDP status
  btst #1, d1        ; test DMA busy flag
  bne.s start_wait_dma ; loop while DMA busy

  ; initialize CRAM
  move.l #0x81048f02, (a1) ; C00004 reg 1 = 0x04, reg 15 = 0x02: blank, auto-increment=2
  move.l #0xc0000000, (a1) ; C00004 write CRAM address 0x0000
  moveq #32-1, d2          ; loop for 32 CRAM registers
start_init_cram:
  move.l d0, (a0)          ; C00000 clear CRAM register
  dbra d2, start_init_cram

  ; Initialize VSRAM
  move.l #0x40000010, (a1) ; C00004 VSRAM write address 0x0000
  moveq #20-1, d2          ; loop for 20 VSRAM registers
start_init_vsram:
  move.l d0, (a0)          ; C00000 clear VSRAM register
  dbra d2, start_init_vsram

  ; Initialize PSG
  moveq #4-1, d2             ; loop for 4 PSG registers
  movea.l #psg_reg_init_table, a2
start_init_psg:
  move.b (a2)+, (0x0011, a0) ; C00011 copy PSG initialization commands
  dbra d2, start_init_psg

  ; Unblank display
  move.w #0x8144, (a1)   ; C00004 reg 1 = 0x44 unblank display

  ;; Setup heap and static initializers
  movea.l #ram_start+32, a5
  move.l #_res_images_ImgJavaGrinder_pattern, (res_images_ImgJavaGrinder_pattern)
  move.l #_res_images_ImgJavaGrinder_image, (res_images_ImgJavaGrinder_image)
  move.l #_res_images_ImgJavaGrinder_palette, (res_images_ImgJavaGrinder_palette)
  move.l #_res_sprites_SprArrow_pattern, (res_sprites_SprArrow_pattern)
  move.l #_res_sprites_SprArrow_palette, (res_sprites_SprArrow_palette)
  move.l #_res_sprites_SprArrow_clearPattern, (res_sprites_SprArrow_clearPattern)

main:
  link a6, #-0x24
  jsr (_load_fonts).l
  jsr (_clear_text).l
  moveq #0, d0
  move.l d0, (-8,a6)
  moveq #0, d0
  move.l d0, (-12,a6)
  moveq #1, d0
  move.l d0, (-16,a6)
  moveq #1, d0
  move.l d0, (-20,a6)
  moveq #0, d0
  move.l d0, (-24,a6)
  move.l #0x10e, d0
  move.l d0, (-28,a6)
  move.l #0xe6, d0
  move.l d0, (-32,a6)
  ;; invoke_static_method() name=res_images_ImgJavaGrinder_draw params=0 is_void=1
  jsr res_images_ImgJavaGrinder_draw
  ;; invoke_static_method() name=res_sprites_SprArrow_draw params=0 is_void=1
  jsr res_sprites_SprArrow_draw
main_34:
  move.l (-16,a6), d0
  cmp.l #0, d0
  beq.w main_316  ; distance=139
  ;; Read from joypad 1
  move.b #0x40, (0xa10009) ; Set direction
  move.b #0x40, (0xa10003) ; TH=1
  move.b (0xa10003), d0
  and.l #0xff, d0
  move.b #0x00, (0xa10003) ; TH=0
  move.b (0xa10003), d5
  and.l #0xff, d5
  lsl.l #8, d5
  or.l d5, d0
  eori.w #0xffff, d0
  move.l d0, (-8,a6)
  move.l (-12,a6), d0
  cmp.l #0, d0
  bne.w main_299  ; distance=126
  moveq #0, d0
  move.l d0, (-36,a6)
main_49:
  move.l (-36,a6), d0
  move.l #0xf000, d1
  cmp.l d1, d0
  bgt.w main_296  ; distance=120
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #129, d1
  cmp.l d1, d0
  bne.s main_90  ; distance=13
  move.l (-32,a6), d0
  moveq #127, d1
  cmp.l d1, d0
  ble.s main_90  ; distance=10
  moveq #0, d0
  move.l (-28,a6), d1
  move.l (-32,a6), d2
  move.l (-20,a6), d3
  sub.l d3, d2
  ;; dup
  move.l d2, d3
  move.l d3, (-32,a6)
  ;; setSpritePosition()
  asl.w #3, d0
  swap d0
  move.l #0x58000003, d5
  add.l d0, d5
  move.l d5, (a1)
  move.w d2, (a0)
  add.l #0x00060000, d5
  move.l d5, (a1)
  move.w d1, (a0)
  bra.w main_296  ; distance=103
main_90:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #130, d1
  cmp.l d1, d0
  bne.s main_125  ; distance=13
  move.l (-32,a6), d0
  move.l #0x160, d1
  cmp.l d1, d0
  bge.s main_125  ; distance=10
  moveq #0, d0
  move.l (-28,a6), d1
  move.l (-32,a6), d2
  move.l (-20,a6), d3
  add.l d3, d2
  ;; dup
  move.l d2, d3
  move.l d3, (-32,a6)
  ;; setSpritePosition()
  asl.w #3, d0
  swap d0
  move.l #0x58000003, d5
  add.l d0, d5
  move.l d5, (a1)
  move.w d2, (a0)
  add.l #0x00060000, d5
  move.l d5, (a1)
  move.w d1, (a0)
  bra.w main_296  ; distance=86
main_125:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #132, d1
  cmp.l d1, d0
  bne.s main_159  ; distance=13
  move.l (-28,a6), d0
  moveq #126, d1
  cmp.l d1, d0
  ble.s main_159  ; distance=10
  moveq #0, d0
  move.l (-28,a6), d1
  move.l (-20,a6), d2
  sub.l d2, d1
  ;; dup
  move.l d1, d2
  move.l d2, (-28,a6)
  move.l (-32,a6), d2
  ;; setSpritePosition()
  asl.w #3, d0
  swap d0
  move.l #0x58000003, d5
  add.l d0, d5
  move.l d5, (a1)
  move.w d2, (a0)
  add.l #0x00060000, d5
  move.l d5, (a1)
  move.w d1, (a0)
  bra.w main_296  ; distance=69
main_159:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #136, d1
  cmp.l d1, d0
  bne.s main_194  ; distance=13
  move.l (-28,a6), d0
  move.l #0x1c0, d1
  cmp.l d1, d0
  bge.s main_194  ; distance=10
  moveq #0, d0
  move.l (-28,a6), d1
  move.l (-20,a6), d2
  add.l d2, d1
  ;; dup
  move.l d1, d2
  move.l d2, (-28,a6)
  move.l (-32,a6), d2
  ;; setSpritePosition()
  asl.w #3, d0
  swap d0
  move.l #0x58000003, d5
  add.l d0, d5
  move.l d5, (a1)
  move.w d2, (a0)
  add.l #0x00060000, d5
  move.l d5, (a1)
  move.w d1, (a0)
  bra.w main_296  ; distance=52
main_194:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #53376, d1
  cmp.l d1, d0
  bne.s main_208  ; distance=4
  moveq #1, d0
  move.l d0, (-12,a6)
  bra.w main_296  ; distance=44
main_208:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #144, d1
  cmp.l d1, d0
  bne.s main_226  ; distance=5
  ;; invoke_static_method() name=res_sprites_SprArrow_setTo0 params=0 is_void=1
  jsr res_sprites_SprArrow_setTo0
  moveq #1, d0
  move.l d0, (-12,a6)
  bra.w main_296  ; distance=35
main_226:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #160, d1
  cmp.l d1, d0
  bne.s main_241  ; distance=4
  moveq #1, d0
  move.l d0, (-12,a6)
  bra.w main_296  ; distance=27
main_241:
  move.l (-8,a6), d0
  move.l (-36,a6), d1
  add.l #57472, d1
  cmp.l d1, d0
  bne.w main_287  ; distance=20
  move.l (-24,a6), d0
  cmp.l #0, d0
  bne.s main_261  ; distance=4
  moveq #1, d0
  move.l d0, (-24,a6)
  bra.s main_282  ; distance=12
main_261:
  move.l (-24,a6), d0
  moveq #1, d1
  cmp.l d1, d0
  bne.s main_273  ; distance=4
  moveq #2, d0
  move.l d0, (-24,a6)
  bra.s main_282  ; distance=6
main_273:
  move.l (-24,a6), d0
  moveq #3, d1
  cmp.l d1, d0
  bne.s main_282  ; distance=3
  moveq #0, d0
  move.l d0, (-24,a6)
main_282:
  moveq #1, d0
  move.l d0, (-12,a6)
  bra.s main_296  ; distance=3
main_287:
  add.l #256, (-36,a6)
  bra.w main_49  ; distance=121
main_296:
  bra.w main_34  ; distance=130
main_299:
  move.l (-8,a6), d0
  move.l #0xcc80, d1
  cmp.l d1, d0
  beq.s main_311  ; distance=4
  move.l (-8,a6), d0
  move.l #0xc080, d1
  cmp.l d1, d0
  bne.w main_34  ; distance=136
main_311:
  moveq #0, d0
  move.l d0, (-12,a6)
  bra.w main_34  ; distance=139
main_316:
  unlk a6
  rts

PlayBackgroundMusic:
  rts

res_images_ImgJavaGrinder_draw:
  movea.l #res_images_ImgJavaGrinder_palette, a2
  move.l (a2), d0
  movea.l d0, a3
  jsr (_set_palette_colors).l
  movea.l #res_images_ImgJavaGrinder_pattern, a2
  move.l (a2), d0
  movea.l d0, a3
  moveq.l #0, d7
  jsr (_set_pattern_table).l
  movea.l #res_images_ImgJavaGrinder_image, a2
  move.l (a2), d0
  movea.l d0, a3
  jsr (_set_image_data).l
  rts

res_sprites_SprArrow_draw:
  moveq #16, d0
  movea.l #res_sprites_SprArrow_palette, a2
  move.l (a2), d1
  movea.l d1, a3
  jsr (_set_palette_colors_at_index).l
  move.l #0x4a0, d1
  movea.l #res_sprites_SprArrow_pattern, a2
  move.l (a2), d2
  movea.l d2, a3
  move.l d1, d7
  jsr (_set_pattern_table).l
  moveq #0, d1
  move.l #0x10e, d2
  move.l #0xe6, d3
  ;; setSpritePosition()
  asl.w #3, d1
  swap d1
  move.l #0x58000003, d5
  add.l d1, d5
  move.l d5, (a1)
  move.w d3, (a0)
  add.l #0x00060000, d5
  move.l d5, (a1)
  move.w d2, (a0)
  moveq #0, d1
  move.l #0x701, d2
  ;; setSpriteConfig1()
  asl.w #3, d1
  swap d1
  move.l #0x58020003, d5
  add.l d1, d5
  move.l d5, (a1)
  move.w d2, (a0)
  moveq #0, d1
  move.l #0x24a0, d2
  ;; setSpriteConfig2()
  asl.w #3, d1
  swap d1
  move.l #0x58040003, d5
  add.l d1, d5
  move.l d5, (a1)
  move.w d2, (a0)
  rts

res_sprites_SprArrow_setTo0:
  moveq #0, d0
  moveq #0, d1
  moveq #0, d2
  ;; setSpritePosition()
  asl.w #3, d0
  swap d0
  move.l #0x58000003, d5
  add.l d0, d5
  move.l d5, (a1)
  move.w d2, (a0)
  add.l #0x00060000, d5
  move.l d5, (a1)
  move.w d1, (a0)
  rts

res_sprites_SprArrow_clear:
  move.l #0x4a0, d0
  movea.l #res_sprites_SprArrow_clearPattern, a2
  move.l (a2), d1
  movea.l d1, a3
  move.l d0, d7
  jsr (_set_pattern_table).l
  rts

.align 32
  dc32 2192   ; res_images_ImgJavaGrinder_pattern.length
_res_images_ImgJavaGrinder_pattern:
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0011, 0x0122, 0x3222, 0x2222
  dc32 0x0000, 0x0000, 0x0000, 0x44444400, 0x22222211, 0x22222222, 0x22222222, 0x21112222
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x10000000, 0x23000000, 0x22000000
  dc32 0x0000, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222
  dc32 0x50000, 0x22222200, 0x22222224, 0x22222222, 0x22222222, 0x33132222, 0x1222, 0x0222
  dc32 0x0000, 0x2222, 0x2222, 0x40002222, 0x20002222, 0x21003313, 0x22000000, 0x22000000
  dc32 0x0000, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220
  dc32 0x0000, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200
  dc32 0x0000, 0x22220000, 0x22220000, 0x22220000, 0x22220000, 0x33330000, 0x0000, 0x0000
  dc32 0x0333, 0x0222, 0x0222, 0x0222, 0x0222, 0x0222, 0x0222, 0x0222
  dc32 0x33333333, 0x22222222, 0x22222222, 0x22222222, 0x22222222, 0x22222222, 0x22111112, 0x22000001
  dc32 0x0000, 0x0000, 0x24000000, 0x22400000, 0x22210000, 0x22221000, 0x22222000, 0x22222300
  dc32 0x0000, 0x22222, 0x22222, 0x22222, 0x22222, 0x33333, 0x0000, 0x0000
  dc32 0x33333, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222
  dc32 0x33333330, 0x22222220, 0x22222222, 0x22222222, 0x22222222, 0x33322222, 0x12222, 0x1222
  dc32 0x0000, 0x0000, 0x0000, 0x40000000, 0x21000000, 0x22000000, 0x22000000, 0x22000000
  dc32 0x0000, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002
  dc32 0x0000, 0x22220000, 0x22220000, 0x22220000, 0x22220000, 0x22220000, 0x22220000, 0x22220000
  dc32 0x2222, 0x2442, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x40004222, 0x0222, 0x0222, 0x2222, 0x42222, 0x41122222, 0x22222223, 0x22222223
  dc32 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x25000000, 0x30000000, 0x0000, 0x0000
  dc32 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222, 0x22222
  dc32 0x0222, 0x0222, 0x0222, 0x2222, 0x44442222, 0x22222223, 0x22222220, 0x22222221
  dc32 0x22000000, 0x22005505, 0x20002222, 0x20002222, 0x50002222, 0x2222, 0x2222, 0x30002222
  dc32 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220
  dc32 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200
  dc32 0x0000, 0x0000, 0x22220000, 0x22220000, 0x22220000, 0x22220001, 0x22220002, 0x22220002
  dc32 0x0000, 0x333333, 0x222222, 0x2222222, 0x42222222, 0x22222322, 0x22223032, 0x22210001
  dc32 0x0000, 0x30000033, 0x20000022, 0x22000022, 0x22400022, 0x22210022, 0x22220022, 0x22223022
  dc32 0x0000, 0x33303333, 0x22202222, 0x22222222, 0x22222222, 0x22223222, 0x22230322, 0x22200012
  dc32 0x0000, 0x33000000, 0x22000000, 0x22000000, 0x22400000, 0x22200000, 0x22200000, 0x22200000
  dc32 0x0222, 0x0222, 0x0222, 0x0222, 0x0222, 0x0222, 0x0222, 0x0222
  dc32 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x22000000
  dc32 0x42222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200, 0x2222200
  dc32 0x0000, 0x33333, 0x22222, 0x2222222, 0x2222222, 0x12223332, 0x22220003, 0x22220000
  dc32 0x0000, 0x30000333, 0x20000222, 0x22000222, 0x22400322, 0x22210022, 0x22220022, 0x22220012
  dc32 0x0000, 0x33000003, 0x22000002, 0x22000002, 0x22000002, 0x22100012, 0x22200022, 0x22200022
  dc32 0x0000, 0x33033333, 0x22022222, 0x22022222, 0x22022222, 0x22022222, 0x22022222, 0x22022222
  dc32 0x0000, 0x0033, 0x0022, 0x2222, 0x42222, 0x22222, 0x122223, 0x222220
  dc32 0x0000, 0x33330000, 0x22220000, 0x22222000, 0x22222400, 0x32222200, 0x3222210, 0x122220
  dc32 0x0000, 0x33333, 0x22222, 0x222222, 0x4222222, 0x2222333, 0x12223000, 0x22220000
  dc32 0x0000, 0x33000000, 0x22000000, 0x22200002, 0x22240042, 0x22220022, 0x22221022, 0x22222022
  dc32 0x0000, 0x33333330, 0x22222220, 0x22222222, 0x22222222, 0x22233222, 0x22300322, 0x22130013
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x40000000, 0x21000000, 0x22000000, 0x31000000
  dc32 0x0222, 0x0222, 0x0222, 0x0222, 0x4222, 0x41142222, 0x22222223, 0x22222220
  dc32 0x22000000, 0x22033333, 0x22022222, 0x20022222, 0x20022222, 0x30022222, 0x22222, 0x22222
  dc32 0x0000, 0x3333, 0x2222, 0x2222, 0x2222, 0x2222, 0x2222, 0x2222
  dc32 0x0000, 0x333300, 0x222200, 0x222222, 0x222222, 0x222222, 0x222223, 0x222220
  dc32 0x0000, 0x33333300, 0x22222200, 0x22222200, 0x22222240, 0x52222220, 0x3222220, 0x122220
  dc32 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002
  dc32 0x22220000, 0x22220000, 0x22220000, 0x22220000, 0x22220004, 0x22220002, 0x22220002, 0x22220003
  dc32 0x0000, 0x3333333, 0x2222222, 0x22222222, 0x22222222, 0x22233322, 0x22200022, 0x13101322
  dc32 0x0000, 0x33333, 0x22222, 0x20022222, 0x24032222, 0x22002222, 0x22002222, 0x22001222
  dc32 0x0000, 0x0333, 0x0222, 0x0222, 0x4222, 0x10002222, 0x20002222, 0x20002222
  dc32 0x0000, 0x30003333, 0x20002222, 0x20022222, 0x20422222, 0x31222233, 0x2222300, 0x3131313
  dc32 0x0000, 0x33300000, 0x22200000, 0x22220000, 0x22224000, 0x32222000, 0x2222000, 0x32222000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x22222, 0x22222, 0x52222, 0x2222
  dc32 0x12222222, 0x4412222, 0x4222, 0x0222, 0x0222, 0x0222, 0x40004222, 0x21112222
  dc32 0x30000000, 0x20000000, 0x25000000, 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x23000000
  dc32 0x11112222, 0x4222, 0x0422, 0x0022, 0x0022, 0x0422, 0x4222, 0x11112222
  dc32 0x23002222, 0x22002222, 0x22502222, 0x22202222, 0x22202222, 0x22202222, 0x22202222, 0x22302222
  dc32 0x22220032, 0x22220022, 0x22220022, 0x22220022, 0x22220022, 0x22220032, 0x22220002, 0x22220002
  dc32 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22240004, 0x22221012
  dc32 0x22222022, 0x22222022, 0x22222022, 0x22222022, 0x22222022, 0x22222022, 0x22225022, 0x22220022
  dc32 0x22200002, 0x22200002, 0x22200002, 0x22200002, 0x22200002, 0x22200002, 0x22200002, 0x22200002
  dc32 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22200000, 0x22200000
  dc32 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x22000000, 0x22000004, 0x22414412, 0x22222222
  dc32 0x2222203, 0x2222202, 0x2222202, 0x2222202, 0x22222202, 0x22222303, 0x22222000, 0x22222000
  dc32 0x22223333, 0x22222222, 0x22222222, 0x22222222, 0x22220000, 0x22220000, 0x22220000, 0x22221001
  dc32 0x22220002, 0x22220002, 0x22220002, 0x22220002, 0x0000, 0x0000, 0x41140000, 0x22220000
  dc32 0x22200022, 0x22230322, 0x22220222, 0x22220222, 0x22220222, 0x22224222, 0x22222222, 0x32222222
  dc32 0x21022222, 0x20022222, 0x20022222, 0x20022222, 0x22222, 0x22222, 0x22222, 0x22222
  dc32 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222220, 0x222224, 0x322222
  dc32 0x11110, 0x0000, 0x0000, 0x0000, 0x22000, 0x422440, 0x222220, 0x11222230
  dc32 0x22223333, 0x22222222, 0x22222222, 0x22222222, 0x22220000, 0x22220000, 0x22220000, 0x32221101
  dc32 0x22222022, 0x22222042, 0x22222004, 0x22222000, 0x0000, 0x0044, 0x41144022, 0x22223022
  dc32 0x22223330, 0x22222223, 0x42222222, 0x2222222, 0x22222, 0x44033222, 0x22000222, 0x22101222
  dc32 0x0000, 0x0000, 0x30000000, 0x20000000, 0x22000000, 0x22000000, 0x22000000, 0x23000000
  dc32 0x22222223, 0x41422222, 0x42222, 0x2222, 0x2222, 0x2222, 0x2222, 0x3222
  dc32 0x30022222, 0x20022222, 0x20022222, 0x20022222, 0x22022222, 0x22022222, 0x22022222, 0x22022222
  dc32 0x2222, 0x2222, 0x2222, 0x2222, 0x2222, 0x2222, 0x42222, 0x11122222
  dc32 0x22220, 0x22220, 0x22220, 0x22220, 0x22220, 0x22220, 0x22220, 0x22220
  dc32 0x0000, 0x0000, 0x0003, 0x0002, 0x0002, 0x0002, 0x0002, 0x0003
  dc32 0x0002, 0x0002, 0x33330002, 0x22220002, 0x22220002, 0x22220002, 0x22221442, 0x22222222
  dc32 0x22220000, 0x22220003, 0x22220032, 0x22220022, 0x22220022, 0x22220022, 0x22220022, 0x22230022
  dc32 0x33332222, 0x22222222, 0x22224422, 0x22220022, 0x22200022, 0x22300022, 0x22000022, 0x22100122
  dc32 0x22000222, 0x22000222, 0x22000222, 0x22000222, 0x22000022, 0x22000022, 0x22000022, 0x22000032
  dc32 0x20032221, 0x23022220, 0x22022220, 0x22022220, 0x22022200, 0x22422200, 0x22222200, 0x22222200
  dc32 0x33222, 0x322222, 0x3222224, 0x2222200, 0x2222000, 0x2222000, 0x2222000, 0x2222101
  dc32 0x22222000, 0x22222000, 0x42222000, 0x2222000, 0x2222000, 0x2222000, 0x2222000, 0x12222000
  dc32 0x3222, 0x0122, 0x0042, 0x0004, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222222, 0x22222221, 0x22222210, 0x44444400, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x30000000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222, 0x22222, 0x22222, 0x44444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222222, 0x22222222, 0x22222221, 0x44444440, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22002222, 0x21002222, 0x10002222, 0x4444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x222220, 0x222220, 0x222220, 0x444440, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x2222200, 0x2222200, 0x2222200, 0x4444400, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22220003, 0x22220000, 0x22220000, 0x44440000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222122, 0x12222222, 0x4122222, 0x44444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22230022, 0x22100022, 0x11000022, 0x0044, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22200002, 0x22200002, 0x22200002, 0x44400004, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22200000, 0x22200000, 0x22200000, 0x44400000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0222, 0x0222, 0x0222, 0x0444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222222, 0x22222222, 0x22222222, 0x44444444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22223000, 0x22110000, 0x14000000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222132, 0x11222222, 0x122222, 0x44444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22230000, 0x22200000, 0x21400000, 0x40000000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x2222223, 0x2222220, 0x1222220, 0x444440, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x32222, 0x2222, 0x4122, 0x0044, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222200, 0x22222100, 0x22211000, 0x44400000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x2222212, 0x1222222, 0x412222, 0x4444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22220022, 0x22210012, 0x21100004, 0x40000000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22212222, 0x22222222, 0x12222214, 0x4444400, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x20000000, 0x10000000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22032222, 0x22002222, 0x22001422, 0x44000044, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222222, 0x22212222, 0x22102222, 0x44004444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22220, 0x22220, 0x22220, 0x44440, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222222, 0x12222222, 0x4122222, 0x44444, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22200022, 0x22100012, 0x14000001, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22213222, 0x22222122, 0x22221022, 0x44440044, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22000002, 0x22300002, 0x22200002, 0x44400004, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222300, 0x22222000, 0x22222000, 0x44444000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x2222212, 0x1222222, 0x122221, 0x44440, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x22222000, 0x12222000, 0x2222000, 0x4444000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0066, 0x0077, 0x8877
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0099, 0x0077, 0x6677, 0x7777
  dc32 0x7777, 0x87797, 0x777700, 0x777700, 0x99777700, 0x77777700, 0x7777aa00, 0x77770000
  dc32 0x0000, 0x0000, 0x000a, 0x0077, 0x0077, 0x9977, 0x7777, 0xb6bb7777
  dc32 0x88a87777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x7777aaaa, 0x77770000, 0x778a0000
  dc32 0x77bb0000, 0x77000000, 0x99000000, 0x0000, 0x0000, 0x0000, 0x0000, 0xb6bb6b
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x99799900, 0x77777700, 0x7788a800
  dc32 0x0000, 0x00aa, 0x0077, 0xaa77, 0x7777, 0x7777, 0x977777, 0x777777
  dc32 0x77777777, 0x77777766, 0x77777700, 0x77999900, 0x77000000, 0x77000000, 0xa0000000, 0x0000
  dc32 0x77000000, 0x6b0000aa, 0x0077, 0xaa77, 0x7777, 0x7777, 0x797777, 0x777777
  dc32 0x777777, 0xaa777766, 0x77777700, 0x77779900, 0x77770000, 0x77770000, 0x77000000, 0x77000000
  dc32 0x77000000, 0x66000000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0xbb777777, 0x77777777, 0x77777766, 0x77777700, 0x777777a8, 0x77777777, 0x77777777, 0x77777777
  dc32 0xbb777777, 0x77777777, 0x77777777, 0x77777777, 0x99777777, 0x777777, 0x777777, 0x777777
  dc32 0x88000000, 0x0000, 0x0000, 0x0000, 0xa8000000, 0x77000000, 0x77000000, 0x77000000
  dc32 0x77777777, 0x88777777, 0x777777, 0x66a677, 0x0077, 0x009b, 0x0000, 0x0000
  dc32 0x0000, 0xbb000000, 0x77000000, 0x77a60000, 0x77770000, 0xb9778a00, 0x777700, 0x777700
  dc32 0x777777, 0x887777, 0x7777, 0x7777, 0x7777, 0xb977, 0x0077, 0x0077
  dc32 0x77000000, 0x77bb0000, 0x77770000, 0x77776a00, 0x77777700, 0x77777700, 0x77777700, 0x77777700
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xccc5, 0xdddd
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0xeeeeeeee, 0xdddddddd, 0xdddddddd, 0xdddddddd
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0xee000000, 0xdd000000, 0xef000000, 0x0000
  dc32 0x7777, 0x7777, 0x8888, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0077, 0x0077, 0x0077, 0x0077, 0x00a6, 0x0000, 0x0000, 0x0000
  dc32 0x77777700, 0x77777700, 0x77778800, 0x77770000, 0xa6a60000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x5cc50000, 0xdddd0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0xecceecec, 0xdddddddd, 0xffefdddd, 0xdddd
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xccc50000, 0xdddd0000
  dc32 0xdddd, 0x00dd, 0x00dd, 0x0055, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0xdddddddd, 0xdddddddd, 0xdddddddd, 0x555555dd, 0x00dd, 0x00cc, 0x0000, 0x00cc
  dc32 0x0000, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xcccccccc, 0x0000, 0xcccccccc
  dc32 0x0000, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xcccccccc, 0x0000, 0xcccccc00
  dc32 0x0000, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xcccccccc, 0x0000, 0x0000
  dc32 0x0000, 0xdddddddd, 0xdddddddd, 0xdddd5555, 0xdddd0000, 0xcccc0000, 0x0000, 0x0000
  dc32 0x0000, 0xdddddddd, 0xdddddddd, 0x55555555, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0005, 0xdddddddd, 0xdddddddd, 0x55555555, 0x0000, 0x0000, 0x0000, 0xcccc
  dc32 0xdddd0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xcc000000
  dc32 0xdddd, 0x00dd, 0x00dd, 0x00dd, 0x00dd, 0xeedd, 0xdddd, 0xccdddd
  dc32 0xdddd0000, 0xdddddd00, 0xdddddd00, 0xdddddd00, 0xdddddd00, 0xdddddd00, 0xdddddd00, 0xddddee00
  dc32 0x00dd, 0x00fd, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0x555555dd, 0x00dd, 0x00cc, 0x0000
  dc32 0xdddddd00, 0xdddddd55, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xcccccccc, 0x0000
  dc32 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xcccccccc, 0x0000
  dc32 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdd555555, 0xdd000000, 0xcc000000, 0x0000
  dc32 0xdddd, 0x5550dffd, 0xdddd0000, 0xdddd0000, 0x55550000, 0x0000, 0x0000, 0x0000
  dc32 0xdd000000, 0xfd000000, 0x0000, 0x0000, 0x00ff, 0x00dd, 0xeedd, 0xdddd
  dc32 0xdddddd, 0x5dddddd, 0xdddddddd, 0xdddddddd, 0xdddd5555, 0xdddd0000, 0xcccc0000, 0x0000
  dc32 0xdddd0000, 0xfddd0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xeeeeeeee
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xee000000
  dc32 0x0000, 0x0000, 0x555555, 0xdddddd, 0xdddddd, 0x55dddd, 0xdddd, 0xcccc
  dc32 0x0000, 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xccccccdd
  dc32 0x0000, 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd
  dc32 0x0000, 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xddcccccc
  dc32 0x0000, 0x0000, 0x55555500, 0xdddddd00, 0xdddddd00, 0xdd055500, 0xdd000000, 0xcc000000
  dc32 0xeeee, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0xcccc, 0xdddd, 0x55dddd, 0xdddddd, 0xdddddd, 0x00dd, 0x00dd
  dc32 0xdddddddd, 0xddddddee, 0xdddddd00, 0xdddddd55, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd
  dc32 0xdd000000, 0xee000000, 0x0000, 0x55000000, 0xdd000000, 0xdd000000, 0xdddfffff, 0xdddddddd
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffffffff, 0xdddddddd
  dc32 0x00dd, 0x00ee, 0x0000, 0x0000, 0x0000, 0x0000, 0xffffffff, 0xdddddddd
  dc32 0xdddddddd, 0xeeeeeeee, 0x0000, 0x0000, 0x0000, 0x0000, 0xffffffff, 0xdddddddd
  dc32 0xdd000000, 0xee000000, 0x0000, 0x0000, 0x0000, 0x0000, 0xffffffff, 0xdddddddd
  dc32 0x0000, 0x0000, 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd
  dc32 0x0000, 0x0000, 0x0000, 0x55555555, 0xdddddddd, 0xdddddddd, 0xdddd0000, 0xdddd0000
  dc32 0x0000, 0xcccccc, 0xdddddd, 0x55ddfdff, 0xdddd0000, 0xdddd0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0xdf000000, 0xdd000000
  dc32 0x00cc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0xcccccccc, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0xdddddddd, 0xdddddddd, 0xeeeeeeee, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xffffdddd, 0xdddd, 0xdddd, 0x0555
  dc32 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0xdddddddd, 0x55555555
  dc32 0xddcccccc, 0xdd000000, 0xddcccccc, 0xdddddddd, 0xddddddff, 0xdddddd00, 0xdddddd00, 0x55555500
  dc32 0xcccccccc, 0x0000, 0xcccccccc, 0xdddddddd, 0xffffffff, 0x0000, 0x0000, 0x0000
  dc32 0xccddeeee, 0xdddddd, 0xccdddddd, 0xdddddddd, 0xffffffff, 0x0000, 0x0000, 0x0000
  dc32 0xeeeeeeee, 0xdddddddd, 0xddddeeee, 0xdddd0000, 0xffff0000, 0x0000, 0x0000, 0x0000
  dc32 0xdd000000, 0xdd000000, 0xee000000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x99999999, 0x77777777, 0x77777777, 0x77777777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x88888777, 0x0777, 0x0777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777778, 0x777777a0
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x88887777, 0x8777, 0x0777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777788, 0x77777700, 0x777777b0
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777778, 0x77777780
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x88888877, 0x0977, 0x6777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777778, 0x77777780, 0x77777800
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x0000, 0x0000, 0x0000
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x0000, 0x0000, 0x0006
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x7000000, 0x97000000, 0x77000000
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x877770, 0x87770, 0x8770
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x770000, 0x770000, 0x770000
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x87777777, 0x8777777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77000700, 0x77000700, 0x77000700
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x0008, 0x0000, 0x0000
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777770, 0x87777780, 0x8777800
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x7000000, 0x7000000, 0xb7000000
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x7777, 0x7777, 0x8777
  dc32 0x0777, 0x0777, 0x0777, 0x0777, 0x0777, 0x0777, 0x0777, 0x0777
  dc32 0x77777a00, 0x77777000, 0x7777b000, 0x77790000, 0x77700000, 0x77700000, 0x77800000, 0x77000000
  dc32 0x0a77, 0x0067, 0x0007, 0x8000009, 0x7000000, 0x77700000, 0x8000000, 0x0000
  dc32 0x77777776, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x7777777, 0x7777777, 0x8777777
  dc32 0x0677, 0x0077, 0x800000b7, 0x78000009, 0x77000000, 0x77000000, 0x77900000, 0x77790000
  dc32 0x77777700, 0x77777600, 0x77777000, 0x77779000, 0x77770000, 0x77700000, 0x7700000, 0x8800000
  dc32 0x7777, 0xa7777, 0x77777, 0x877777, 0x777777, 0x7777777, 0x7777777, 0x97777777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x7777777, 0x7777777, 0x8777777
  dc32 0x7777a000, 0x77770000, 0x77770000, 0x77770000, 0x77770000, 0x77770000, 0x77770000, 0x77770000
  dc32 0x0000, 0x88888, 0x8877777, 0x7777777, 0x7777777, 0x77777777, 0x77777777, 0x77777777
  dc32 0x0067, 0x88888877, 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x77777000, 0x77777000
  dc32 0x77000000, 0x770000aa, 0x77000077, 0x77000079, 0x77000070, 0x77000070, 0x7000070, 0x7000079
  dc32 0x0000, 0xaaaaaaaa, 0x77777777, 0x99999999, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0770, 0x0770, 0x0770, 0x0770, 0x0770, 0x0770, 0x7770, 0x97770
  dc32 0x770000, 0x770000, 0x770000, 0x770008, 0x770007, 0x770007, 0x770007, 0x770007
  dc32 0xa77777, 0x67777, 0xb777, 0x0977, 0x0077, 0x70000007, 0x77000000, 0x77900000
  dc32 0x77000700, 0x77000700, 0x77000700, 0x77000700, 0x77000700, 0x77000700, 0x77000700, 0x87000700
  dc32 0x0000, 0xaaaaaa, 0x777777, 0x777777, 0x777777, 0x777777, 0x777777, 0x777777
  dc32 0x0000, 0xaaaa0000, 0x77778800, 0x77777700, 0x77777700, 0x77777770, 0x77777770, 0x77777770
  dc32 0xa77000, 0x77000, 0x7b000, 0x70000, 0x70000, 0x70000, 0x70000, 0x70000
  dc32 0x0000, 0x8aaa8, 0x877777, 0x8777777, 0x7777777, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0xaaaaaaaa, 0x77777777, 0x77777777, 0x77777777, 0x0000, 0x0007, 0x00b7
  dc32 0x77000000, 0x770000aa, 0x77000077, 0x77000079, 0x77000070, 0x77000070, 0x77000070, 0x77000079
  dc32 0x0777, 0x0777, 0x0777, 0x0777, 0x0777, 0x0777, 0x7777, 0x97777
  dc32 0x77777777, 0x77777777, 0x77777766, 0x77777b00, 0x77799000, 0x77700000, 0x77000000, 0x77777777
  dc32 0x77777777, 0x77777777, 0x66666666, 0x0000, 0x0000, 0x0000, 0x0000, 0x77777777
  dc32 0x0777, 0x0777, 0x0777, 0x077b, 0x8790, 0x7700, 0x77700, 0x77777777
  dc32 0x78000000, 0xa0000066, 0x0077, 0x0877, 0x8777, 0x7777, 0x7777, 0x77777777
  dc32 0x0000, 0x66666000, 0x77777a00, 0x77777780, 0x77777770, 0x77777770, 0x77777777, 0x77777777
  dc32 0x877777, 0x77777, 0x67777, 0xb777, 0x0777, 0x0777, 0x0077, 0x77777777
  dc32 0x77770000, 0x77776000, 0x77777000, 0x77777800, 0x77777780, 0x77777770, 0x77777770, 0x77777777
  dc32 0x000b, 0x0007, 0x00a7, 0x0077, 0x0877, 0x0777, 0x7777, 0x77977777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x7777777b, 0x77777790, 0x77777700, 0x77777700, 0x77777777
  dc32 0x877777, 0x77777, 0x67777, 0xb777, 0x0779, 0x0770, 0x0077, 0x77777777
  dc32 0x77777777, 0x77777777, 0x77777777, 0x77777777, 0x99999999, 0x0000, 0x0000, 0x77977777
  dc32 0x77770000, 0x77770000, 0x77770000, 0x77778000, 0x99977000, 0x97000, 0x7700, 0x77777777
  dc32 0x87777777, 0x7777777, 0x6677777, 0xbbbbb, 0x0000, 0x0000, 0x0000, 0x77777777
  dc32 0x77777000, 0x77777000, 0x77777000, 0xbbbbb000, 0x0000, 0x0000, 0x0000, 0x77777777
  dc32 0x7000077, 0x7000077, 0x7000077, 0x7000077, 0x7000077, 0x7000077, 0x7000077, 0x77777777
  dc32 0xb0000000, 0x76000000, 0x77a00000, 0x77780000, 0x77778000, 0x77777000, 0x77777700, 0x77777777
  dc32 0xbb77770, 0xa777770, 0x677770, 0xb7770, 0x9770, 0x0970, 0x0070, 0x77777777
  dc32 0x770007, 0x770007, 0x770007, 0x770007, 0x770007, 0x770007, 0x770007, 0x77777777
  dc32 0x777b0000, 0x77776000, 0x77777a00, 0x77777780, 0x77777778, 0x77777777, 0x77777777, 0x77777777
  dc32 0x8000700, 0x0700, 0x0700, 0x0700, 0x0700, 0x0700, 0x70000700, 0x77977777
  dc32 0x777777, 0x777777, 0x777777, 0xbbbbbb, 0x0000, 0x0000, 0x0000, 0x97777777
  dc32 0x77777780, 0x77777a00, 0x77776000, 0xbbbb0000, 0x0000, 0x0000, 0x0000, 0x77777777
  dc32 0x70000, 0x70000, 0x76000, 0x877000, 0x777800, 0x777700, 0x7777770, 0x77777777
  dc32 0xbbbbbbb, 0xa777777, 0x677777, 0xbbbbb, 0x0000, 0x0000, 0x0000, 0x77777777
  dc32 0xbbbbbb77, 0x77777777, 0x77777777, 0xbbbbbbbb, 0x0000, 0x0000, 0x0000, 0x77977777
  dc32 0x77000077, 0x77000077, 0x77000077, 0xb7000077, 0x7000077, 0x7000077, 0x77000077, 0x77777777
  dc32 0xbbb77777, 0xa7777777, 0x6777777, 0xb77777, 0x97777, 0x7777, 0x0777, 0x77777777


.align 32
  dc32 1120   ; res_images_ImgJavaGrinder_image.length
_res_images_ImgJavaGrinder_image:
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0001, 0x0002, 0x0003, 0x0004, 0x0005, 0x0006, 0x0007, 0x0008
  dw 0x0009, 0x0000, 0x0000, 0x0000, 0x0000, 0x000a, 0x000b, 0x000c
  dw 0x0000, 0x0000, 0x0000, 0x000d, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x000e, 0x000f, 0x0010, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0011, 0x0012, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0013, 0x0014, 0x0015, 0x0016, 0x0017, 0x0018, 0x0019, 0x001a
  dw 0x001b, 0x001c, 0x001d, 0x001e, 0x001f, 0x0020, 0x0021, 0x0022
  dw 0x0023, 0x0024, 0x0025, 0x0026, 0x0027, 0x0028, 0x0029, 0x002a
  dw 0x002b, 0x002c, 0x0016, 0x002d, 0x002e, 0x002f, 0x0030, 0x0031
  dw 0x0000, 0x0032, 0x0033, 0x0034, 0x0035, 0x0036, 0x0037, 0x0038
  dw 0x0039, 0x003a, 0x003b, 0x0016, 0x003c, 0x003d, 0x0019, 0x001a
  dw 0x003e, 0x003f, 0x0040, 0x0041, 0x0042, 0x0020, 0x0043, 0x0044
  dw 0x0045, 0x0046, 0x0047, 0x0048, 0x0049, 0x004a, 0x004b, 0x004c
  dw 0x004d, 0x004e, 0x0016, 0x004f, 0x0050, 0x0051, 0x0019, 0x0052
  dw 0x0053, 0x0054, 0x0055, 0x0056, 0x0057, 0x0058, 0x0059, 0x005a
  dw 0x005b, 0x005c, 0x005d, 0x005e, 0x005f, 0x0060, 0x0061, 0x0062
  dw 0x0063, 0x0064, 0x0065, 0x0066, 0x0067, 0x0068, 0x0069, 0x006a
  dw 0x006b, 0x006c, 0x006d, 0x005e, 0x006e, 0x006f, 0x0070, 0x0071
  dw 0x0072, 0x0073, 0x005e, 0x0068, 0x0074, 0x0075, 0x0061, 0x0076
  dw 0x0000, 0x0077, 0x0078, 0x0079, 0x007a, 0x007b, 0x007c, 0x007d
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x007e, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x007f, 0x0080, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0081, 0x0082, 0x0083, 0x0084, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0085, 0x0086, 0x0087, 0x0088, 0x0089, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x008a, 0x0000, 0x008b, 0x008c, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x008d, 0x008e, 0x008f, 0x0090, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0091
  dw 0x0092, 0x0093, 0x0000, 0x0094, 0x0095, 0x0096, 0x0000, 0x0097
  dw 0x0098, 0x0099, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x009a
  dw 0x009b, 0x009c, 0x009d, 0x009e, 0x009f, 0x00a0, 0x00a1, 0x00a2
  dw 0x00a3, 0x00a4, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x00a5, 0x00a6, 0x00a7, 0x00a8, 0x00a8, 0x00a9, 0x00aa, 0x00ab
  dw 0x00ac, 0x00ad, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00ae
  dw 0x00af, 0x00b0, 0x00b1, 0x00b2, 0x00b2, 0x00b3, 0x00b4, 0x00b5
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00b6, 0x00b7
  dw 0x00b8, 0x00b9, 0x00ba, 0x00bb, 0x00bb, 0x00bc, 0x00bd, 0x00be
  dw 0x00bf, 0x00c0, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x00c1, 0x00c2
  dw 0x00c3, 0x00c4, 0x00c5, 0x00c5, 0x00c5, 0x00c6, 0x00c7, 0x00c8
  dw 0x00c9, 0x00ca, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dw 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb
  dw 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb
  dw 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb
  dw 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb
  dw 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb, 0x00cb
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cd
  dw 0x00ce, 0x00cf, 0x00d0, 0x00cf, 0x00d1, 0x00d2, 0x00ce, 0x00cf
  dw 0x00cc, 0x00cc, 0x00d3, 0x00d4, 0x00d5, 0x00d6, 0x00d4, 0x00d7
  dw 0x00d8, 0x00d9, 0x00da, 0x00d4, 0x00db, 0x00dc, 0x00d4, 0x00d4
  dw 0x00dd, 0x00d4, 0x00de, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00df
  dw 0x00e0, 0x00e1, 0x00e2, 0x00e3, 0x00e4, 0x00e5, 0x00e0, 0x00e1
  dw 0x00e6, 0x00cc, 0x00e7, 0x00e8, 0x00e9, 0x00ea, 0x00eb, 0x00ec
  dw 0x00ed, 0x00ee, 0x00ef, 0x00f0, 0x00f1, 0x00f2, 0x00f3, 0x00f4
  dw 0x00f5, 0x00eb, 0x00f6, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00f7, 0x00f8, 0x00f9
  dw 0x00fa, 0x00fb, 0x00fc, 0x00fd, 0x00fe, 0x00ff, 0x00fa, 0x00fb
  dw 0x0100, 0x0101, 0x0102, 0x0103, 0x0104, 0x0105, 0x0106, 0x0107
  dw 0x0108, 0x0109, 0x010a, 0x010b, 0x010c, 0x010d, 0x010e, 0x010f
  dw 0x0110, 0x0106, 0x0111, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc
  dw 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc, 0x00cc


.align 32
  dc32 16   ; res_images_ImgJavaGrinder_palette.length
_res_images_ImgJavaGrinder_palette:
  dw 0x0eee, 0x0444, 0x0000, 0x0888, 0x0222, 0x0ecc, 0x066e, 0x000e
  dw 0x0aae, 0x022e, 0x088e, 0x044e, 0x0eaa, 0x0e00, 0x0e66, 0x0e22


.align 32
  dc32 64   ; res_sprites_SprArrow_pattern.length
_res_sprites_SprArrow_pattern:
  dc32 0x1100000, 0x1100000, 0x1110000, 0x1110000, 0x1121100, 0x1123310, 0x1123310, 0x1123331
  dc32 0x1123331, 0x1123333, 0x1123333, 0x1122233, 0x1122233, 0x1122233, 0x1122233, 0x1122233
  dc32 0x1122223, 0x1122223, 0x1122222, 0x1122222, 0x1122222, 0x1121111, 0x1121111, 0x1111101
  dc32 0x1111101, 0x1110000, 0x1110000, 0x1100000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x10000000
  dc32 0x10000000, 0x31000000, 0x31000000, 0x33110000, 0x33331000, 0x33331000, 0x33333110, 0x33333110
  dc32 0x33333331, 0x33333331, 0x23111111, 0x23111111, 0x23110000, 0x13331000, 0x13331000, 0x11331000
  dc32 0x11331000, 0x1333110, 0x1333110, 0x1113110, 0x113110, 0x113110, 0x111110, 0x111110


.align 32
  dc32 4   ; res_sprites_SprArrow_palette.length
_res_sprites_SprArrow_palette:
  dw 0x0cae, 0x0000, 0x0ccc, 0x0eee

.align 32
  dc32 64   ; res_sprites_SprArrow_clearPattern.length
_res_sprites_SprArrow_clearPattern:
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000
  dc32 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000


  ; VDP register initialization (24 bytes)
.align 32
vdp_reg_init_table:
  db  0x04  ; reg  0 = mode reg 1: no H interrupt
  db  0x14  ; reg  1 = mode reg 2: blanked, no V interrupt, DMA enable
  db  0x38  ; reg  2 = name table base for scroll A: 0xe000
  db  0x3c  ; reg  3 = name table base for window:   0xf000
  db  0x06  ; reg  4 = name table base for scroll B: 0xc000
  db  0x6c  ; reg  5 = sprite attribute table base: 0xd800
  db  0x00  ; reg  6 = unused register: 0x00
  db  0x00  ; reg  7 = background color: 0x00
  db  0x00  ; reg  8 = unused register: 0x00
  db  0x00  ; reg  9 = unused register: 0x00
  db  0xff  ; reg 10 = H interrupt register: 0xFF (esentially off)
  db  0x03  ; reg 11 = mode reg 3: disable ext int, full H/V scroll
  db  0x81  ; reg 12 = mode reg 4: 40 cell horiz mode, no interlace
  db  0x3f  ; reg 13 = H scroll table base: 0xfc00
  db  0x00  ; reg 14 = unused register: 0x00
  db  0x02  ; reg 15 = auto increment: 0x02
  db  0x01  ; reg 16 = scroll size: V=32 cell, H=64 cell
  db  0x00  ; reg 17 = window H position: 0x00
  db  0x00  ; reg 18 = window V position: 0x00
  db  0xff  ; reg 19 = DMA length count low:   0x00ff
  db  0xff  ; reg 20 = DMA length count high:  0xffxx
  db  0x00  ; reg 21 = DMA source address low: 0xxxxx00
  db  0x00  ; reg 22 = DMA source address mid: 0xxx00xx
  db  0x80  ; reg 23 = DMA source address high: VRAM fill, addr = 0x00xxxx

  ; PSG initialization: set all channels to minimum volume
psg_reg_init_table:
  db  0x9f,0xbf,0xdf,0xff

_load_fonts:
  move.w #((fontend - font) / 4) - 1, d6
  move.l #0x4c000002, (a1)  ; C00004 VRAM write to 0x8c00
  movea.l #font, a2         ; Point to font set
_load_fonts_loop:
  move.l (a2)+, (a0)        ; C00000 write next longword of charset to VDP
  dbra d6, _load_fonts_loop ; loop until done
  rts

.align 32
font:
  dc32 0x01111100, 0x11000110, 0x11000110, 0x11000110 ; A
  dc32 0x11111110, 0x11000110, 0x11000110, 0x00000000
  dc32 0x11111100, 0x11000110, 0x11000110, 0x11111100 ; B
  dc32 0x11000110, 0x11000110, 0x11111100, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000110, 0x11000000 ; C
  dc32 0x11000110, 0x11000110, 0x11111110, 0x00000000
  dc32 0x11111100, 0x11000110, 0x11000110, 0x11000110 ; D
  dc32 0x11000110, 0x11000110, 0x11111100, 0x00000000
  dc32 0x11111110, 0x11000000, 0x11000000, 0x11111100 ; E
  dc32 0x11000000, 0x11000000, 0x11111110, 0x00000000
  dc32 0x11111110, 0x11000000, 0x11000000, 0x11111100 ; F
  dc32 0x11000000, 0x11000000, 0x11000000, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000000, 0x11001110 ; G
  dc32 0x11000110, 0x11000110, 0x11111110, 0x00000000
  dc32 0x11000110, 0x11000110, 0x11000110, 0x11111110 ; H
  dc32 0x11000110, 0x11000110, 0x11000110, 0x00000000
  dc32 0x00111000, 0x00111000, 0x00111000, 0x00111000 ; I
  dc32 0x00111000, 0x00111000, 0x00111000, 0x00000000
  dc32 0x00000110, 0x00000110, 0x00000110, 0x00000110 ; J
  dc32 0x00000110, 0x01100110, 0x01111110, 0x00000000
  dc32 0x11000110, 0x11001100, 0x11111000, 0x11111000 ; K
  dc32 0x11001100, 0x11000110, 0x11000110, 0x00000000
  dc32 0x01100000, 0x01100000, 0x01100000, 0x01100000 ; L
  dc32 0x01100000, 0x01100000, 0x01111110, 0x00000000
  dc32 0x11000110, 0x11101110, 0x11111110, 0x11010110 ; M
  dc32 0x11000110, 0x11000110, 0x11000110, 0x00000000
  dc32 0x11000110, 0x11100110, 0x11110110, 0x11011110 ; N
  dc32 0x11001110, 0x11000110, 0x11000110, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000110, 0x11000110 ; O
  dc32 0x11000110, 0x11000110, 0x11111110, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000110, 0x11111110 ; P
  dc32 0x11000000, 0x11000000, 0x11000000, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000110, 0x11000110 ; Q
  dc32 0x11001110, 0x11001110, 0x11111110, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000110, 0x11111100 ; R
  dc32 0x11000110, 0x11000110, 0x11000110, 0x00000000
  dc32 0x11111110, 0x11000110, 0x11000000, 0x11111110 ; S
  dc32 0x00000110, 0x11000110, 0x11111110, 0x00000000
  dc32 0x11111110, 0x00111000, 0x00111000, 0x00111000 ; T
  dc32 0x00111000, 0x00111000, 0x00111000, 0x00000000
  dc32 0x11000110, 0x11000110, 0x11000110, 0x11000110 ; U
  dc32 0x11000110, 0x11000110, 0x11111110, 0x00000000
  dc32 0x11000110, 0x11000110, 0x11000110, 0x11000110 ; V
  dc32 0x01101100, 0x00111000, 0x00010000, 0x00000000
  dc32 0x11000110, 0x11000110, 0x11000110, 0x11010110 ; W
  dc32 0x11111110, 0x11101110, 0x11000110, 0x00000000
  dc32 0x11000110, 0x11000110, 0x11101110, 0x01111100 ; X
  dc32 0x11101110, 0x11000110, 0x11000110, 0x00000000
  dc32 0x11000110, 0x11000110, 0x11000110, 0x01101100 ; Y
  dc32 0x00111000, 0x00111000, 0x00111000, 0x00000000
  dc32 0x11111110, 0x00001110, 0x00011100, 0x00111000 ; Z
  dc32 0x01110000, 0x11100000, 0x11111110, 0x00000000
  dc32 0x00000000, 0x00000000, 0x00000000, 0x00000000 ; ' '
  dc32 0x00000000, 0x00000000, 0x00000000, 0x00000000
fontend:

_clear_text:
  move.w #(64 * 32 / 2) - 1, d6
  move.l #0x60000003, (a1)  ; C00004 VRAM write to 0xe000
  move.l #((1120 + (']' - 'A')) << 16) | (1120 + (']' - 'A')), d7
_clear_text_loop:
  move.l d7, (a0)           ; C00000 write next longword of ' ' to VDP
  dbra d6, _clear_text_loop ; loop until done
  rts

_set_pattern_table:
  lsl.l #5, d7               ; pattern_index * 32
  move.l d7, d5
  rol.w #2, d5
  and.w #3, d5               ; d5 = upper 2 bits moved to lower 2 bits
  and.w #0x3ffe, d7          ; d7 = lower 13 bits
  or.w #0x4000, d7
  swap d7
  or.w d5, d7
  move.l d7, (a1)
  move.l (-4,a3), d5         ; Code len
  subq.l #1, d5
_set_pattern_table_loop:
  move.l (a3)+, (a0)
  dbf d5, _set_pattern_table_loop
  rts

_set_image_data:
  move.l #0x40000003, d7     ; Set cursor position in VDP
  move.l d7, (a1)
  move.l (-4,a3), d5         ; Code len
  eor.w d6, d6
_set_image_data_loop:
  move.w (a3)+, (a0)
  add.w #1, d6
  cmp.w #40, d6
  bne.s _set_image_data_not_40
  eor.w d6, d6
  add.l #0x00800000, d7
  move.l d7, (a1)
_set_image_data_not_40:
  dbf d5, _set_image_data_loop
  rts

_set_palette_colors:
  move.l #0xc0000000, (a1)   ; C00004 write CRAM address 0x0000
  move.l (-4,a3), d5         ; Code len
_set_palette_colors_loop:
  move.w (a3)+, (a0)
  dbf d5, _set_palette_colors_loop
  rts

_set_palette_colors_at_index:
  lsl.w #1, d0
  swap d0
  add.l #0xc0000000, d0
  move.l d0, (a1)   ; C00004 write CRAM address d0 * 2
  move.l (-4,a3), d5         ; Code len
_set_palette_colors_at_index_loop:
  move.w (a3)+, (a0)
  dbf d5, _set_palette_colors_at_index_loop
  rts


